package com.malware.booted.rest;

import com.malware.booted.model.OrderHistoryDTO;
import com.malware.booted.service.OrderHistoryService;

import java.util.List;
import javax.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping(value = "/api/order", produces = MediaType.APPLICATION_JSON_VALUE)
public class OrderHistoryResource {

    private final OrderHistoryService orderHistoryService;

    public OrderHistoryResource(final OrderHistoryService orderHistoryService) {
        this.orderHistoryService = orderHistoryService;
    }

    @GetMapping
    public ResponseEntity<List<OrderHistoryDTO>> getAllOrderHistories() {
        return ResponseEntity.ok(orderHistoryService.findAll());
    }

    @GetMapping("/{id}")
    public ResponseEntity<OrderHistoryDTO> getOrderHistory(@PathVariable final Long id) {
        return ResponseEntity.ok(orderHistoryService.get(id));
    }

    @PostMapping
    public ResponseEntity<Long> createOrderHistory(
            @RequestBody @Valid final OrderHistoryDTO orderHistoryDTO) {
        return new ResponseEntity<>(orderHistoryService.create(orderHistoryDTO), HttpStatus.CREATED);
    }

    @PutMapping("/{id}")
    public ResponseEntity<Void> updateOrderHistory(@PathVariable final Long id,
            @RequestBody @Valid final OrderHistoryDTO orderHistoryDTO) {
        orderHistoryService.update(id, orderHistoryDTO);
        return ResponseEntity.ok().build();
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteOrderHistory(@PathVariable final Long id) {
        orderHistoryService.delete(id);
        return ResponseEntity.noContent().build();
    }

}
